#summary TODO-list for this project

= TODO-list for this project =

Here are some features that we would like to implement in the BeIT Memcached client:

=== Parallell multi-get ===

Currently, the multi-get method builds a list of servers it needs to talk to, and then retrieves the objects sequentially. Using the asynchronous socket methods with callbacks, it should be possible to parallellize this, which would further speed up the client.

=== Asynchronous Connect ===

Another use of the asynchronous socket methods is to perform the socket connections asynchronously, which should allow us to check the connection timeout properly.

=== More overloads ===

Some methods such as the counter-related ones and delete does not have overloads where you can specify expiry times.

=== Make the client feature-complete ===

Not all features of the memcached protocol are implemented such as "cas", "append" and "prepend".

=== Better Stats ===

The Stats method should take a key or a hash, and return the stats result from that specific server.